DATA:
  MAX_SAMPLE_INTERVAL: 200
  MEAN:
  - 0.485
  - 0.456
  - 0.406
  SEARCH:
    CENTER_JITTER: 3
    FACTOR: 4.0
    SCALE_JITTER: 0.25
    SIZE: 256
    NUMBER: 1
  STD:
  - 0.229
  - 0.224
  - 0.225
  TEMPLATE:
    CENTER_JITTER: 0
    FACTOR: 2.0
    SCALE_JITTER: 0
    SIZE: 128
#  TRAIN:
#    DATASETS_NAME:
#      - GOT10K_train_full
#    DATASETS_RATIO:
#      - 1
#    SAMPLE_PER_EPOCH: 60000

  TRAIN:
    DATASETS_NAME:
    - LASOT
    - GOT10K_vottrain
    - COCO17
    - TRACKINGNET
    DATASETS_RATIO:
    - 1
    - 1
    - 1
    - 1
    SAMPLE_PER_EPOCH: 60000
  VAL:
    DATASETS_NAME:
    - GOT10K_votval
    DATASETS_RATIO:
    - 1
    SAMPLE_PER_EPOCH: 10000
MODEL:
  PRETRAIN_FILE: "mae_pretrain_vit_base.pth"
  EXTRA_MERGER: False
  RETURN_INTER: False
  BACKBONE:
    TYPE: vit_base_patch16_224_ce
    STRIDE: 16
    CE_LOC: [3, 6, 9] # 候选目标消除（candidate elimination）的位置列表。
    CE_KEEP_RATIO: [0.7, 0.7, 0.7] # 候选目标消除的保留比例列表。
    CE_TEMPLATE_RANGE: 'CTR_POINT'  # choose between ALL, CTR_POINT, CTR_REC, GT_BOX
  HEAD:
    TYPE: CENTER
    NUM_CHANNELS: 256
TRAIN:
  BACKBONE_MULTIPLIER: 0.1  # backbone学习率的倍率，用于调整backbone的学习率
  DROP_PATH_RATE: 0.1 # 用于控制随机dropout的比例
  CE_START_EPOCH: 20  # candidate elimination start epoch，用于控制候选目标消除的开始epoch
  CE_WARM_EPOCH: 80  # candidate elimination warm up epoch
  BATCH_SIZE: 32
  EPOCH: 300
  GIOU_WEIGHT: 2.0
  L1_WEIGHT: 5.0  
  GRAD_CLIP_NORM: 0.1 # 梯度裁剪，防止梯度爆炸，一般设置为0.1
  # LR: 0.0004  # 学习率，是在4个GPU上训练的，如果是单卡训练，需要将学习率除以4
  LR: 0.0001
  LR_DROP_EPOCH: 240  # 学习率下降的epoch
  NUM_WORKER: 10
  OPTIMIZER: ADAMW
  PRINT_INTERVAL: 50  # 每隔50个batch打印一次训练信息
  SCHEDULER:
    TYPE: step
    DECAY_RATE: 0.1 # 学习率下降的倍率
  VAL_EPOCH_INTERVAL: 20  # 每隔20个epoch进行一次验证
  WEIGHT_DECAY: 0.0001  # 权重衰减，防止过拟合，一般设置为0.0001
  AMP: False
TEST:
  EPOCH: 300
  SEARCH_FACTOR: 4.0  # 搜索区域的扩大倍率，用于扩大搜索区域
  SEARCH_SIZE: 256  # 搜索区域的大小
  TEMPLATE_FACTOR: 2.0  # 模板区域的扩大倍率，用于扩大模板区域
  TEMPLATE_SIZE: 128  # 模板区域的大小